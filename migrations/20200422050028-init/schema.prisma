datasource db {
  provider = "postgresql"
  url = "***"
}

// output   = "./__generated__/prisma-client/"
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

// generator nexus_prisma {
// provider = "nexus-prisma"
// }
model User {
  id                    String         @default(cuid()) @id
  userType              Int
  userEmail             String         @unique
  userPassword          String
  publicHash            String         @unique
  privateHash           String         @unique
  confirmHash           String         @unique
  forgotHash            String         @unique
  userConfirmed         Int
  userDeleted           Boolean        @default(false)
  userMeta              UserMeta[]
  posts                 Post[]
  pods                  Pod[]          @relation("CreatePodRelation")
  memberOf              Pod[]          @relation("JoinPodRelation", references: [id])
  favorites             Favorite[]
  reviews               Review[]
  annotations           Annotation[]
  questions             Question[]
  threads               Thread[]       @relation(references: [id])
  following             User[]         @relation("FollowerRelation", references: [id])
  followers             User[]         @relation("FollowerRelation", references: [id])
  notifications         Notification[] @relation("NotificationRelation")
  sentNotifications     Notification[] @relation("SendingUserRelation")
  recievedNotifications Notification[] @relation("ReceivingUserRelation")
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
}

model UserMeta {
  id          String   @default(cuid()) @id
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pod {
  id             String     @default(cuid()) @id
  user           User       @relation("CreatePodRelation", fields: [userId], references: [id])
  userId         String
  members        User[]     @relation("JoinPodRelation", references: [id])
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemName       String
  itemContent    String
  itemDeleted    Boolean    @default(false)
  itemMeta       PodMeta[]
  posts          Post[]
  categories     Category[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model PodMeta {
  id          String   @default(cuid()) @id
  pod         Pod      @relation(fields: [podId], references: [id])
  podId       String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id             String       @default(cuid()) @id
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  pod            Pod          @relation(fields: [podId], references: [id])
  podId          String
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean      @default(false)
  itemMeta       PostMeta[]
  tags           Tag[]
  favorites      Favorite[]
  reviews        Review[]
  annotations    Annotation[]
  questions      Question[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model PostMeta {
  id          String   @default(cuid()) @id
  post        Post     @relation(fields: [postId], references: [id])
  postId      String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id             String       @default(cuid()) @id
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean      @default(false)
  itemMeta       ReviewMeta[]
  post           Post         @relation(fields: [postId], references: [id])
  postId         String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model ReviewMeta {
  id          String   @default(cuid()) @id
  review      Review   @relation(fields: [reviewId], references: [id])
  reviewId    String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Annotation {
  id             String           @default(cuid()) @id
  user           User             @relation(fields: [userId], references: [id])
  userId         String
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean          @default(false)
  itemMeta       AnnotationMeta[]
  post           Post             @relation(fields: [postId], references: [id])
  postId         String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model AnnotationMeta {
  id           String     @default(cuid()) @id
  annotation   Annotation @relation(fields: [annotationId], references: [id])
  annotationId String
  metaType     String
  metaName     String
  metaValue    String
  metaDeleted  Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Question {
  id             String         @default(cuid()) @id
  user           User           @relation(fields: [userId], references: [id])
  userId         String
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean        @default(false)
  itemMeta       QuestionMeta[]
  post           Post           @relation(fields: [postId], references: [id])
  postId         String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model QuestionMeta {
  id          String   @default(cuid()) @id
  question    Question @relation(fields: [questionId], references: [id])
  questionId  String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Thread {
  id           String       @default(cuid()) @id
  itemType     String
  itemStatus   String
  itemName     String
  itemContent  String
  itemDeleted  Boolean      @default(false)
  itemMeta     ThreadMeta[]
  messages     Message[]
  participants User[]       @relation(references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model ThreadMeta {
  id          String   @default(cuid()) @id
  thread      Thread   @relation(fields: [threadId], references: [id])
  threadId    String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id          String        @default(cuid()) @id
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  itemDeleted Boolean       @default(false)
  itemMeta    MessageMeta[]
  thread      Thread        @relation(fields: [threadId], references: [id])
  threadId    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model MessageMeta {
  id          String   @default(cuid()) @id
  message     Message  @relation(fields: [messageId], references: [id])
  messageId   String
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id          String             @default(cuid()) @id
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  itemDeleted Boolean            @default(false)
  itemMeta    NotificationMeta[]
  sender      User               @relation("SendingUserRelation", fields: [senderId], references: [id])
  senderId    String
  receiver    User               @relation("ReceivingUserRelation", fields: [receiverId], references: [id])
  receiverId  String
  pod         Pod                @relation(fields: [podId], references: [id])
  podId       String
  post        Post               @relation(fields: [postId], references: [id])
  postId      String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  userId      String?
}

model NotificationMeta {
  id             String       @default(cuid()) @id
  notification   Notification @relation(fields: [notificationId], references: [id])
  notificationId String
  metaType       String
  metaName       String
  metaValue      String
  metaDeleted    Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Favorite {
  id          String   @default(cuid()) @id
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  post        Post     @relation(fields: [postId], references: [id])
  postId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          String   @default(cuid()) @id
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  posts       Post[]   @relation(references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          String   @default(cuid()) @id
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  pods        Pod[]    @relation(references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}