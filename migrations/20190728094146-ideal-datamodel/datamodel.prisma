datasource db {
  provider = "postgresql"
  url      = "postgresql://alex@localhost:5432/reeviewr-prisma2?schema=reeviewr-prisma-main"
}

generator photonjs {
  provider = "photonjs"
}

generator nexus_prisma {
  provider = "nexus-prisma"
}

model User {
  id            Int            @id
  userType      Int
  userEmail     String         @unique
  userPassword  String
  publicHash    String         @unique
  privateHash   String         @unique
  confirmHash   String         @unique
  forgotHash    String         @unique
  userConfirmed Int
  userDeleted   Boolean        @default(false)
  userMeta      UserMeta[]
  posts         Post[]
  favorites     Favorite[]
  reviews       Review[]
  annotations   Annotation[]
  questions     Question[]
  threads       Thread[]
  notifications Notification[]
  following     User[]         @relation(name: "FollowRelation")
  followers     User[]         @relation(name: "FollowRelation")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model UserMeta {
  id          Int      @id
  user        User
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pod {
  id             Int        @id
  user           User
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemName       String
  itemContent    String
  itemDeleted    Boolean    @default(false)
  itemMeta       PostMeta[]
  posts          Post[]
  categories     Category[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model PodMeta {
  id          Int      @id
  post        Post
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id             Int          @id
  user           User
  pod            Pod
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean      @default(false)
  itemMeta       PostMeta[]
  tags           Tag[]
  favorites      Favorite[]
  reviews        Review[]
  annotations    Annotation[]
  questions      Question[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model PostMeta {
  id          Int      @id
  post        Post
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id             Int          @id
  user           User
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean      @default(false)
  itemMeta       ReviewMeta[]
  post           Post
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model ReviewMeta {
  id          Int      @id
  review      Review
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Annotation {
  id             Int              @id
  user           User
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean          @default(false)
  itemMeta       AnnotationMeta[]
  post           Post
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model AnnotationMeta {
  id          Int        @id
  annotation  Annotation
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Question {
  id             Int            @id
  user           User
  itemType       String
  itemStatus     String
  itemUrlSegment String
  itemMimeType   String
  itemName       String
  itemContent    String
  itemDeleted    Boolean        @default(false)
  itemMeta       QuestionMeta[]
  post           Post
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model QuestionMeta {
  id          Int      @id
  question    Question
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Thread {
  id          Int          @id
  user        User
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  itemDeleted Boolean      @default(false)
  itemMeta    ThreadMeta[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model ThreadMeta {
  id          Int      @id
  thread      Thread
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id          Int           @id
  user        User
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  itemDeleted Boolean       @default(false)
  itemMeta    MessageMeta[]
  thread      Thread
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model MessageMeta {
  id          Int      @id
  message     Message
  metaType    String
  metaName    String
  metaValue   String
  metaDeleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id          Int                @id
  user        User
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  itemDeleted Boolean            @default(false)
  itemMeta    NotificationMeta[]
  thread      Thread
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model NotificationMeta {
  id           Int          @id
  notification Notification
  metaType     String
  metaName     String
  metaValue    String
  metaDeleted  Boolean      @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Favorite {
  id          Int      @id
  user        User
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  post        Post
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          Int      @id
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  post        Post
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          Int      @id
  itemType    String
  itemStatus  String
  itemName    String
  itemContent String
  pod         Pod
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}