### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Mutation {
  createOneUser(data: UserCreateInput!): User!
}

input PostCreateManyWithoutPostsInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutUserInput!]
}

input PostCreateWithoutUserInput {
  itemContent: String!
  itemDeleted: Boolean
  itemMeta: PostMetaCreateManyWithoutItemMetaInput
  itemMimeType: String!
  itemName: String!
  itemStatus: String!
  itemType: String!
  itemUrlSegment: String!
  reviews: ReviewCreateManyWithoutReviewsInput
}

input PostMetaCreateManyWithoutItemMetaInput {
  connect: [PostMetaWhereUniqueInput!]
  create: [PostMetaCreateWithoutPostInput!]
}

input PostMetaCreateWithoutPostInput {
  metaDeleted: Boolean
  metaName: String!
  metaType: String!
  metaValue: String!
}

input PostMetaWhereUniqueInput {
  id: Int
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  findManyUser(after: String, before: String, first: Int, last: Int, skip: Int): [User!]
  findOneUser(where: UserWhereUniqueInput!): User
}

input ReviewCreateManyWithoutReviewsInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutPostInput!]
}

input ReviewCreateWithoutPostInput {
  itemContent: String!
  itemDeleted: Boolean
  itemMeta: ReviewMetaCreateManyWithoutItemMetaInput
  itemMimeType: String!
  itemName: String!
  itemStatus: String!
  itemType: String!
  itemUrlSegment: String!
  user: UserCreateOneWithoutUserInput!
}

input ReviewMetaCreateManyWithoutItemMetaInput {
  connect: [ReviewMetaWhereUniqueInput!]
  create: [ReviewMetaCreateWithoutReviewInput!]
}

input ReviewMetaCreateWithoutReviewInput {
  metaDeleted: Boolean
  metaName: String!
  metaType: String!
  metaValue: String!
}

input ReviewMetaWhereUniqueInput {
  id: Int
}

input ReviewWhereUniqueInput {
  id: Int
}

type User {
  confirmHash: String!
  forgotHash: String!
  id: Int!
  privateHash: String!
  publicHash: String!
  userConfirmed: Int!
  userDeleted: Boolean!
  userEmail: String!
  userType: Int!
}

input UserCreateInput {
  confirmHash: String!
  forgotHash: String!
  posts: PostCreateManyWithoutPostsInput
  privateHash: String!
  publicHash: String!
  reviews: ReviewCreateManyWithoutReviewsInput
  userConfirmed: Int!
  userDeleted: Boolean
  userEmail: String!
  userMeta: UserMetaCreateManyWithoutUserMetaInput
  userPassword: String!
  userType: Int!
}

input UserCreateOneWithoutUserInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReviewsInput
}

input UserCreateWithoutReviewsInput {
  confirmHash: String!
  forgotHash: String!
  posts: PostCreateManyWithoutPostsInput
  privateHash: String!
  publicHash: String!
  userConfirmed: Int!
  userDeleted: Boolean
  userEmail: String!
  userMeta: UserMetaCreateManyWithoutUserMetaInput
  userPassword: String!
  userType: Int!
}

input UserMetaCreateManyWithoutUserMetaInput {
  connect: [UserMetaWhereUniqueInput!]
  create: [UserMetaCreateWithoutUserInput!]
}

input UserMetaCreateWithoutUserInput {
  metaDeleted: Boolean
  metaName: String!
  metaType: String!
  metaValue: String!
}

input UserMetaWhereUniqueInput {
  id: Int
}

input UserWhereUniqueInput {
  confirmHash: String
  forgotHash: String
  id: Int
  privateHash: String
  publicHash: String
  userEmail: String
}
