type User {
  id: ID! @unique
  oldId: ID @unique
  userType: Int
  userEmail: String @unique
  userPassword: String
  publicHash: String
  privateHash: String
  confirmHash: String
  forgotHash: String
  userConfirmed: Int
  userDeleted: Boolean @default(value: "false")
  userMeta: [UserMeta!]!

  # userTracks
  # userFeedbacks
  # profilePages
  # blogPosts
  # reviews
  # files
}

type UserMeta {
  id: ID! @unique
  oldId: String @unique
  user: User
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type UserTrack {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [UserTrackMeta!]!

  # reviews
  # files
}

type UserTrackMeta {
  id: ID! @unique
  oldId: String @unique
  userTrack: UserTrack
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type UserFeedback {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [UserFeedbackMeta!]!
}

type UserFeedbackMeta {
  id: ID! @unique
  oldId: String @unique
  userFeedback: UserFeedback
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type ProfilePage {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [ProfilePageMeta!]!
}

type ProfilePageMeta {
  id: ID! @unique
  oldId: String @unique
  profilePage: ProfilePage
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type BlogPost {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [BlogPostMeta!]!
}

type BlogPostMeta {
  id: ID! @unique
  oldId: String @unique
  blogPost: BlogPost
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type Review {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [ReviewMeta!]!

  # userTrack
}

type ReviewMeta {
  id: ID! @unique
  oldId: String @unique
  review: Review
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}

type File {
  id: ID! @unique
  oldId: String @unique
  user: User
  itemType: String
  itemStatus: String
  itemUrlSegment: String
  itemMimeType: String
  itemName: String!
  itemContent: String!
  itemDeleted: Boolean @default(value: "false")
  itemMeta: [FileMeta!]!

  # userTrack
}

type FileMeta {
  id: ID! @unique
  oldId: String @unique
  file: File
  metaType: String
  metaName: String!
  metaValue: String!
  metaDeleted: Boolean @default(value: "false")
}
